"use strict";var ApplicationConfiguration=function(){var applicationModuleName="mean",applicationModuleVendorDependencies=["ngResource","ngAnimate","ui.router","ui.bootstrap","ui.utils","google-maps"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("articles"),ApplicationConfiguration.registerModule("charts",["runs"]),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("runs",["ngResource","ui.router","google-maps"]),ApplicationConfiguration.registerModule("upload-data",["angularFileUpload","ngResource","ui.router"]),ApplicationConfiguration.registerModule("users"),ApplicationConfiguration.registerModule("visualisations"),angular.module("articles").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Articles","articles","dropdown","/articles(/create)?"),Menus.addSubMenuItem("topbar","articles","List Articles","articles"),Menus.addSubMenuItem("topbar","articles","New Article","articles/create")}]),angular.module("articles").config(["$stateProvider",function($stateProvider){$stateProvider.state("listArticles",{url:"/articles",templateUrl:"modules/articles/views/list-articles.client.view.html"}).state("createArticle",{url:"/articles/create",templateUrl:"modules/articles/views/create-article.client.view.html"}).state("viewArticle",{url:"/articles/:articleId",templateUrl:"modules/articles/views/view-article.client.view.html"}).state("editArticle",{url:"/articles/:articleId/edit",templateUrl:"modules/articles/views/edit-article.client.view.html"})}]),angular.module("articles").controller("ArticlesController",["$scope","$stateParams","$location","Authentication","Articles",function($scope,$stateParams,$location,Authentication,Articles){$scope.authentication=Authentication,$scope.create=function(){var article=new Articles({title:this.title,content:this.content});article.$save(function(response){$location.path("articles/"+response._id),$scope.title="",$scope.content=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(article){if(article){article.$remove();for(var i in $scope.articles)$scope.articles[i]===article&&$scope.articles.splice(i,1)}else $scope.article.$remove(function(){$location.path("articles")})},$scope.update=function(){var article=$scope.article;article.$update(function(){$location.path("articles/"+article._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.articles=Articles.query()},$scope.findOne=function(){$scope.article=Articles.get({articleId:$stateParams.articleId})}}]),angular.module("articles").factory("Articles",["$resource",function($resource){return $resource("articles/:articleId",{articleId:"@_id"},{update:{method:"PUT"}})}]),angular.module("charts").config(["$stateProvider",function($stateProvider){$stateProvider.state("charts",{url:"/my/runs/charts",resolve:{runsSummaries:["runsService",function(runsService){return runsService.getRuns().$promise}]},templateUrl:"modules/charts/views/charts.client.view.html",controller:"chartsCtrl"})}]),function(){var chartsCtrl=function($scope,runsSummaries){$scope.runs=runsSummaries};angular.module("charts").controller("chartsCtrl",["$scope","runsSummaries",chartsCtrl])}(),function(){var lChart=function($window){return{restrict:"E",template:'<svg width="800" height="500"></svg>',link:function(scope,elem){function createDataOb(){runs.forEach(function(run){var markersLen,runData={};runData.markers=[],markersLen=run.markerItems.length,markerSize.push(markersLen),runData.startTime=run.startTime,run.markerItems.forEach(function(marker){0===shortestMarkerTime?shortestMarkerTime=marker.totalTime:marker.totalTime<shortestMarkerTime&&(shortestMarkerTime=marker.totalTime),marker.totalTime>longestMarkerTime&&(longestMarkerTime=marker.totalTime);var markerData={km:marker.km,time:marker.totalTime};runData.markers.push(markerData)}),runData.totalDistance=run.totalDistanceKm,runData.totalTime=run.totalTime,data.push(runData)})}function setChartParameters(){0!==shortestMarkerTime&&(xAxis_base=shortestMarkerTime/1.1),xScale=d3.scale.linear().domain([1,markerCount]).range([50,chartWidth]),yScale=d3.time.scale().domain([xAxis_base,longestMarkerTime]).range([chartHeight,0]),xAxisGen=d3.svg.axis().scale(xScale).orient("bottom").ticks(markerCount),yAxisGen=d3.svg.axis().scale(yScale).orient("left").ticks(d3.time.seconds,15).tickFormat(d3.time.format("%Mm %Ss")),lineFun=d3.svg.line().x(function(d){return xScale(d.km)}).y(function(d){return yScale(d.time)}).interpolate("linear")}function getRandomColor(){for(var letters="0123456789ABCDEF".split(""),color="#",i=0;6>i;i++)color+=letters[Math.floor(16*Math.random())];return color}function drawAxis(){setChartParameters(),svg.append("svg:g").attr("class","x axis").attr("transform","translate(0, 470)").call(xAxisGen),svg.append("svg:g").attr("class","y axis").attr("transform","translate(45,0)").call(yAxisGen)}function drawLines(d){svg.append("svg:path").attr({d:lineFun(d.markers),stroke:getRandomColor(),"stroke-width":2,fill:"none","class":pathClass})}{var xScale,yScale,xAxisGen,yAxisGen,lineFun,xAxis_base,markerCount,runs=scope.runs,pathClass="path",d3=$window.d3,rawSvg=elem.find("svg"),svg=d3.select(rawSvg[0]),padding=20,chartWidth=rawSvg.attr("width")-padding,chartHeight=rawSvg.attr("height")-padding,data=[],markerSize=[],longestMarkerTime=0,shortestMarkerTime=0;d3.select("body").append("div").attr("class","tooltip").style("opacity",0)}createDataOb(),markerCount=d3.max(markerSize),drawAxis();var tip=d3.tip().attr("class","d3-tip").offset([-10,0]).html(function(d){return"KM: "+d.km+"<br/>time: "+d3.time.format("%M:%S")(new Date(d.time))});svg.call(tip),data.forEach(function(d){drawLines(d),svg.selectAll("dot").data(d.markers).enter().append("circle").attr("r",5).attr("cx",function(d){return xScale(d.km)}).attr("cy",function(d){return yScale(d.time)}).on("mouseover",tip.show).on("mouseout",tip.hide)})}}};angular.module("charts").directive("lChart",["$window","$filter",lChart])}(),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"})}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus",function($scope,Authentication,Menus){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("core").controller("HomeController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]),angular.module("runs").config(["$stateProvider",function($stateProvider){$stateProvider.state("listRuns",{url:"/runs",resolve:{runsSummaries:["runsService",function(runsService){return runsService.getRuns().$promise}]},templateUrl:"modules/runs/views/list-runs.client.view.html",controller:"MyRunsCtrl as myRuns"}).state("run",{url:"/run",views:{"":{templateUrl:"modules/runs/views/run.client.view.html"},"columnOne@run":{templateUrl:"modules/runs/views/run-single.client.view.html"},"columnTwo@run":{templateUrl:"modules/runs/views/run-map.client.view.html",controller:"MyMapsCtrl as mapsCtrl"}}})}]),function(lodash){function MyRunCtrl($state){var that=this;that.name="hello world",$state.transitionTo("run.map")}angular.module("runs").controller("MyRunCtrl",MyRunCtrl)}(window._),function(lodash,google){function MyMapsCtrl(){function metersToKilometers(meters){return meters/1e3}var that=this;that.name="hello world",that.map={center:{latitude:51.459545,longitude:-.220431},zoom:14},that.marker={id:0,coords:{latitude:51.459545,longitude:-.220431},options:{draggable:!0},label:"START"},that.polylines={id:1,path:[{latitude:51.459545,longitude:-.220431},{latitude:51.458987,longitude:-.232163},{latitude:51.458532,longitude:-.23477},{latitude:51.451967,longitude:-.232989}],stroke:{color:"#ff0000",weight:3},visible:!0,editable:!1,draggable:!1};var paths=that.polylines.path.map(function(currentVal){return new google.maps.LatLng(currentVal.latitude,currentVal.longitude)});that.distance=function(){var meterResult=google.maps.geometry.spherical.computeLength(paths),kilometerResult=metersToKilometers(meterResult);return Math.round(100*kilometerResult)/100}()}"undefined"!==google&&angular.module("runs").controller("MyMapsCtrl",MyMapsCtrl)}(window._,window.google),function(lodash){function MyRunsCtrl(runsSummaries){var that=this;that.runs=runsSummaries,that.sortedRuns=null}angular.module("runs").controller("MyRunsCtrl",["runsSummaries",MyRunsCtrl])}(window._),function(lodash){var _=lodash,runsSummaryTable=function($filter){return{restrict:"E",link:function(scope,element){function createTableOfRuns(runs){function getMarkerSize(runs,headings){var markers=[];runs.forEach(function(run){markers.push(run.markerItems.length)});var markerSize=_.max(markers);headings.markers=markerSize}function createTableHeadings(headings,headingRow){for(var heading in headings)if(headings.hasOwnProperty(heading)){var container=document.createDocumentFragment();if("markers"===heading)for(var markerSize=headings[heading],i=1;markerSize>=i;i++){var thd=document.createElement("th"),km=document.createTextNode("km "+i);thd.appendChild(km),container.appendChild(thd)}else{var thd2=document.createElement("th");thd2.appendChild(document.createTextNode(headings[heading])),container.appendChild(thd2)}headingRow.appendChild(container)}return headingRow}function createTableData(runs,markersSize,$filter){var markerSize=markersSize,container=document.createElement("tbody");return runs.forEach(function(run){var tr=document.createElement("tr"),tdStartTime=document.createElement("td"),sTime=$filter("date")(run.startTime,"EEEE MMM d, y h:mm:ss a");tdStartTime.appendChild(document.createTextNode(sTime)),tr.appendChild(tdStartTime);for(var i=0;markerSize>i;i++){var markerTime,data,td=document.createElement("td");run.markerItems[i]?(markerTime=run.markerItems[i].totalTime,data=$filter("date")(markerTime,"m:ss")):data="",td.appendChild(document.createTextNode(data)),tr.appendChild(td)}var tdTotalDist=document.createElement("td"),dist=+run.totalDistanceKm.toFixed(2);tdTotalDist.appendChild(document.createTextNode(dist)),tr.appendChild(tdTotalDist);var tdTotalTime=document.createElement("td"),time=$filter("date")(run.totalTime,"HH:mm:ss");tdTotalTime.appendChild(document.createTextNode(time)),tr.appendChild(tdTotalTime),container.appendChild(tr)}),container}var table=document.createElement("table");table.className="table table-responsive table-hover";var headingRow,tableHeadings,tableData,markerSize,thead=document.createElement("thead"),headings={date:"Date",markers:0,totalDistance:"Total Distance",totalTime:"Total Time"};return getMarkerSize(runs,headings),markerSize=headings.markers,headingRow=document.createElement("tr"),tableHeadings=createTableHeadings(headings,headingRow),thead.appendChild(headingRow),table.appendChild(thead),tableData=createTableData(runs,markerSize,$filter),table.appendChild(tableData),table}var runs=scope.myRuns.runs,tableOfRuns=(document.createDocumentFragment(),createTableOfRuns(runs));element.append(tableOfRuns)}}};angular.module("runs").directive("runsSummaryTable",["$filter",runsSummaryTable])}(window._);var runsService=function($resource){var runs={resource:$resource("/my/runs/",{},{query:{method:"GET",isArray:!0},create:{method:"POST"}}),getRuns:function(){return null!==this.data?this.data:(this.data=this.resource.query(),this.data)},data:null};return runs};angular.module("runs").factory("runsService",["$resource",runsService]),angular.module("upload-data").config(["$provide",function($provide){$provide.decorator("$upload",function($delegate){return $delegate.checkSuffix=function(suffix,name){var testSuffix=new RegExp("."+suffix);return testSuffix.test(name.slice(-4))},$delegate})}]),angular.module("upload-data").config(["$stateProvider",function($stateProvider){$stateProvider.state("upload",{url:"/my/upload/gpx",templateUrl:"modules/upload-data/views/upload-data.client.view.html",controller:"UploadDataCtrl"})}]);var UploadDataCtrl=function($scope,$upload){$scope.message=[],$scope.message.push("<p></p>"),$scope.fileName="Choose file",$scope.onFileSelect=function($files){function uploadSuccess(data,status,headers,config){$scope.message.push('<li class="bg-success">Successfully uploaded: '+config.file.name+"</li>")}function uploadProgress(evt){console.log("percent: "+parseInt(100*evt.loaded/evt.total))}for(var i=0;i<$files.length;i++){var file=$files[i],isitGpx=$upload.checkSuffix("gpx",file.name);isitGpx!==!1?$scope.upload=$upload.upload({url:"/upload",method:"POST",file:file}).progress(uploadProgress).success(uploadSuccess):$scope.message.push('<li class="bg-danger">The file needs to be a gpx : '+file.name+"</li>")}}};angular.module("upload-data").controller("UploadDataCtrl",["$scope","$upload",UploadDataCtrl]);var uploadFileName=function($compile){return{restrict:"A",link:function(scope){function compileMe(toBeCompiled){return $compile(toBeCompiled)(scope)}scope.$watchCollection("message",function(){var num=scope.message.length-1,newEl=compileMe(scope.message[num]),resultsList=document.getElementById("uploadResults");angular.element(resultsList).prepend(newEl)})}}};angular.module("upload-data").directive("uploadFileName",["$compile",uploadFileName]);var uploadService=function($resource){return $resource("/upload")};angular.module("upload-data").factory("uploadService",["$resource",uploadService]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("reset-invlaid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http.delete("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]),angular.module("visualisations").config(["$stateProvider",function($stateProvider){$stateProvider.state("vis",{url:"/my/runs/linechart",templateUrl:"modules/visualisations/views/vis.client.view.html",controller:"MyVisCtrl"})}]),function(){var MyVisCtrl=function($scope){$scope.salesData=[{hour:1,sales:54},{hour:2,sales:66},{hour:3,sales:77},{hour:4,sales:70},{hour:5,sales:60},{hour:6,sales:63},{hour:7,sales:55},{hour:8,sales:47},{hour:9,sales:55},{hour:10,sales:30}],$scope.name="ME"};angular.module("visualisations").controller("MyVisCtrl",["$scope",MyVisCtrl])}();var linearChart=function($parse,$window){return{restrict:"EA",template:'<svg width="850" height="200"></svg>',link:function(scope,elem,attrs){function setChartParameters(){xScale=d3.scale.linear().domain([salesDataToPlot[0].hour,salesDataToPlot[salesDataToPlot.length-1].hour]).range([padding+5,rawSvg.attr("width")-padding]),yScale=d3.scale.linear().domain([0,d3.max(salesDataToPlot,function(d){return d.sales})]).range([rawSvg.attr("height")-padding,0]),xAxisGen=d3.svg.axis().scale(xScale).orient("bottom").ticks(salesDataToPlot.length-1),yAxisGen=d3.svg.axis().scale(yScale).orient("left").ticks(5),lineFun=d3.svg.line().x(function(d){return xScale(d.hour)}).y(function(d){return yScale(d.sales)}).interpolate("basis")}function drawLineChart(){setChartParameters(),svg.append("svg:g").attr("class","x axis").attr("transform","translate(0,180)").call(xAxisGen),svg.append("svg:g").attr("class","y axis").attr("transform","translate(20,0)").call(yAxisGen),svg.append("svg:path").attr({d:lineFun(salesDataToPlot),stroke:"blue","stroke-width":1,fill:"none","class":pathClass})}function redrawLineChart(){setChartParameters(),svg.selectAll("g.y.axis").call(yAxisGen),svg.selectAll("g.x.axis").call(xAxisGen),svg.selectAll("."+pathClass).attr({d:lineFun(salesDataToPlot)})}var xScale,yScale,xAxisGen,yAxisGen,lineFun,exp=$parse(attrs.chartData),salesDataToPlot=exp(scope),padding=20,pathClass="path",d3=$window.d3,rawSvg=elem.find("svg"),svg=d3.select(rawSvg[0]);scope.$watchCollection(exp,function(newVal){salesDataToPlot=newVal,redrawLineChart()}),drawLineChart()}}};angular.module("visualisations").directive("linearChart",["$parse","$window",linearChart]);